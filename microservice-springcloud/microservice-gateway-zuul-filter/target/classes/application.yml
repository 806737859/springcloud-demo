server:
  port: 8040
spring:
  application:
    name: microservice-gateway-zuul-filter

eureka:
  client:
    service-url:
      defaultZone: http://user:password123@localhost:8761/eureka
  instance:
    prefer-ip-address: true

zuul:
  # 是否开启重试功能(目前没起作用，请大神指教)
  retryable: true
  # （过滤不需要的请求头），配置后转发到被代理微服务的请求将不会包含下列头信息，默认是空的，效果等同于sensitive-headers
  # 但是如果引入了spring-security将会初始化一些spring-security指定的头信息（也就是说会过滤spring-security指定的敏感头信息）
#  ignored-headers: Cookie,Set-Cookie,Authorization
  # 配置false后将不会初始化spring-security指定的头信息，默认为true
#  ignore-security-headers: false
  # （敏感信息全局配置），下游服务均共享安全信息
#  sensitive-headers:
  # 问题：在经过网关的时候，字符串编码可能会被Filter修改
  # 解决方案一：强制使用原始的参数编码方式
  # 解决方案二：复写SimpleHostRoutingFilter RequestContext.getCurrentContext().setRequestQueryParams(someOverriddenParameters)
  forceOriginalQueryStringEncoding: true
  # 禁用过滤器 zuul.<SimpleClassName>.<filterType>.disable=true
#  SendResponseFilter:
#      post:
#        disable: true
  #配置前缀后，所有要经过网关的请求都必须加上前缀
#  prefix: /api
  #(全局配置)是否剥去前缀，(true:就是在转发之前会剥去前缀，譬如请求网关的url是 /api/user/** 转发后的地址就是 /user/***),默认为true
#  strip-prefix: true
  #过滤不需要经过网关的服务
#  ignoredServices: '*' #过滤某个服务，多个用“,”分割，例如：microservice-consumer-movie-ribbon-with-hystrix，如果在routes中配置了，将不会被过滤
  #配置路由
  routes:
    xxx: #路由id
      path: /user/**
      serviceId: microservice-provider-user
#      # 局部是否剥离前缀，一般适用于服务设置了上下文路径的场景
#      stripPrefix: true
      # 针对配置的微服务,局部配置敏感信息，优先级大于全局配置，这里的配置为所有敏感信息共享
#      sensitive-headers:
#    yyy: # url方式路由
#      path: /user/**
#      url: http://localhost:7900
    zzz: # 测试本地转发
      path: /test/**
      url: forward:/test2

# 针对用户服务的ribbon配置(跟retryable配合使用， 目前没起作用，请大神指教)
#microservice-provider-user: #serviceId
#  ribbon:
#    #对当前服务的重试次数
#    MaxAutoRetries: 2
#    #切换相同Server的次数(重试其他同等级别服务的次数)
#    MaxAutoRetriesNextServer: 0
#    # 是否对这个客户端的所有操作都重试
#    OkToRetryOnAllOperations: ture

#hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds: 60000
#ribbon:
#  ribbon连接到微服务的时间
#  ConnectTimeout: 3000
#  读取时间
#  ReadTimeout: 60000

# /actuator/routes{/details} 查看服务路由url映射
# /actuator/filters 查看所有的过滤器
management:
  #端口管理，默认只开启 health 和 info端口
  endpoints:
    web:
      exposure:
        # 过滤的端口，优先级高于include
        exclude: env,beans
        # 开放的端口
        include: "*"

#logging:
#  level:
#    com.netflix: debug

